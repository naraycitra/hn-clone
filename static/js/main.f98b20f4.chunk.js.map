{"version":3,"sources":["store/app/actions.js","store/app/reducer.js","services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/reducer.js","store/reducer.js","store/middleware.js","store/index.js","store/story/selectors.js","utils/getSiteHostname.js","utils/getArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/Loader/styles.js","components/Loader/index.js","styles/palette.js","components/App/styles.js","styles/mediaQueries.js","components/App/App.js","components/App/index.js","styles/globals.js","serviceWorker.js","index.js"],"names":["actionTypes","SET_THEME","concat","app","state","arguments","length","undefined","theme","_ref","type","payload","Object","objectSpread","API_ROOT","process","URL","TIMEOUT","HEADERS","Content-Type","Accept","client","ApiService","_ref$baseURL","baseURL","_ref$timeout","timeout","_ref$headers","headers","auth","classCallCheck","this","axios","create","interceptors","response","use","handleSuccess","handleError","error","Promise","reject","path","get","then","data","post","put","patch","delete","hackerNewsApi","getTopStoryIds","getStory","id","getStoriesByPage","ids","page","_getPageSlice","limit","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","map","all","NS","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORIES_REQUEST","FETCH_STORIES_SUCCESS","FETCH_STORIES_FAILURE","action","actions","fetchStoryIds","dispatch","storyIds","fetchStories","catch","err","stories","story","isFetching","toConsumableArray","rootReducer","combineReducers","middlewareList","push","thunk","middleware","compose","applyMiddleware","apply","configureStore","initialState","createStore","reducer","hasMoreStoriesSelector","createSelector","getSiteHostname","siteUrl","hostname","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","styled","li","_templateObject","border","Title","h3","_templateObject2","_ref2","text","Host","span","_templateObject3","_ref3","textSecondary","ExernalLink","a","_templateObject4","_ref4","Description","div","_templateObject5","_ref5","CommentLink","_templateObject6","_ref6","_ref7","timeago","Timeago","LINK_REL","ListItem","by","_ref$kids","kids","score","title","time","site","link","react_default","createElement","href","rel","target","format","Date","toISOString","ListWrapper","ul","styles_templateObject","backgroundSecondary","List","components_ListItem","assign","key","blink","keyframes","Loader_styles_templateObject","Animation","styles_templateObject2","Loader","colorsDark","background","Wrapper","App_styles_templateObject","h1","App_styles_templateObject2","App","_this$props","_this","props","fetchStoriesFirstPage","_this$props2","hasMoreStores","styled_components_browser_esm","styles_Title","components_List","lib_default","dataLength","next","hasMore","loader","components_Loader","style","height","overflow","Component","connect","setGlobalStyles","injectGlobal","globals_templateObject","Boolean","window","location","match","store","ReactDOM","render","es","components_App","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+LAEaA,EAAc,CACzBC,UAAS,GAAAC,OAHA,gBAGA,eCeIC,EAZH,WAAkD,IAAjDC,EAAiDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAJ/B,CAC7BG,MAAO,QAGqDC,EAAAJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAApBG,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,QAC9C,OAAQD,GACN,KAAKV,EAAYC,UACf,OAAOW,OAAAC,EAAA,EAAAD,CAAA,GACFR,EACAO,GAEP,QACE,OAAOP,4CCXPU,EAAWC,uDAAYC,KAAO,yBAC9BC,EAAU,IACVC,EAAU,CACdC,eAAgB,mBAChBC,OAAQ,oBCHJC,EAAS,eDOb,SAAAC,EAAAb,GAAgF,IAAAc,EAAAd,EAAlEe,eAAkE,IAAAD,EAAxDT,EAAwDS,EAAAE,EAAAhB,EAA9CiB,eAA8C,IAAAD,EAApCR,EAAoCQ,EAAAE,EAAAlB,EAA3BmB,eAA2B,IAAAD,EAAjBT,EAAiBS,EAARE,EAAQpB,EAARoB,KAAQjB,OAAAkB,EAAA,EAAAlB,CAAAmB,KAAAT,GAC9E,IAAMD,EAASW,IAAMC,OAAO,CAC1BT,UACAE,UACAE,UACAC,SAGFR,EAAOa,aAAaC,SAASC,IAAIL,KAAKM,cAAeN,KAAKO,aAC1DP,KAAKV,OAASA,4DAGFc,GACZ,OAAOA,sCAGGI,GACV,OAAOC,QAAQC,OAAOF,+BAGpBG,GACF,OAAOX,KAAKV,OAAOsB,IAAID,GAAME,KAAK,SAAAT,GAAQ,OAAIA,EAASU,oCAGpDH,EAAM/B,GACT,OAAOoB,KAAKV,OAAOyB,KAAKJ,EAAM/B,GAASiC,KAAK,SAAAT,GAAQ,OAAIA,EAASU,mCAG/DH,EAAM/B,GACR,OAAOoB,KAAKV,OAAO0B,IAAIL,EAAM/B,GAASiC,KAAK,SAAAT,GAAQ,OAAIA,EAASU,qCAG5DH,EAAM/B,GACV,OAAOoB,KAAKV,OAAO2B,MAAMN,EAAM/B,GAASiC,KAAK,SAAAT,GAAQ,OAAIA,EAASU,sCAG7DH,GACL,OAAOX,KAAKV,OAAO4B,OAAOP,GAAME,KAAK,SAAAT,GAAQ,OAAIA,EAASU,gBC5C/C,CAAe,CAAErB,QADf,0CAGX0B,EAAgB,GAMtBA,EAAcC,eAAiB,kBAAM9B,EAAOsB,IAAP,cAAAzC,OAVlB,wBAWnBgD,EAAcE,SAAW,SAAAC,GAAE,OAAIhC,EAAOsB,IAAP,SAAAzC,OAAoBmD,GAApBnD,OAXZ,wBAYnBgD,EAAcI,iBAAmB,SAACC,EAAKC,GAAS,IAAAC,EAL3B,SAACC,GAAD,IAAQF,EAARnD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAe,EAAf,MAAsB,CAAEsD,MAAOH,EAAOE,EAAOE,KAAMJ,EAAO,GAAKE,GAM3DG,CAPN,GAO+BL,GAE1CM,EAPc,SAAArD,GAAA,IAAGkD,EAAHlD,EAAGkD,MAAOC,EAAVnD,EAAUmD,IAAV,OAAAnD,EAAesD,MAAkBC,MAAML,EAAOC,GAMhDK,CAAc,CAAEN,MAFYF,EACtCE,MACiCC,IAFKH,EAC/BG,IAC+BG,MAAOR,IACrBW,IAAI,SAAAb,GAAE,OAAIH,EAAcE,SAASC,KACjE,OAAOb,QAAQ2B,IAAIL,IAGNZ,QCnBTkB,EAAK,kBAEEpE,EAAc,CACzBqE,wBAAuB,GAAAnE,OAAKkE,EAAL,4BACvBE,wBAAuB,GAAApE,OAAKkE,EAAL,4BACvBG,wBAAuB,GAAArE,OAAKkE,EAAL,4BACvBI,sBAAqB,GAAAtE,OAAKkE,EAAL,0BACrBK,sBAAqB,GAAAvE,OAAKkE,EAAL,0BACrBM,sBAAqB,GAAAxE,OAAKkE,EAAL,2BAGjBO,EAAS,SAACjE,EAAMC,GAAP,MAAoB,CAAED,OAAMC,YAErCiE,EAAU,CACdC,cAAe,WAAkB,IAAjBlE,EAAiBN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACxB,OAAO,SAAAyE,GAGL,OAFAA,EAASH,EAAO3E,EAAYqE,wBAAyB1D,IAE9CuC,EACJC,iBACAP,KAAK,SAAAmC,GAGJ,OAFAD,EAASH,EAAO3E,EAAYsE,wBAAyB,CAAES,cACvDD,EAASF,EAAQI,aAAa,CAAED,WAAUvB,KAAM,KACzCuB,IAERE,MAAM,SAAAC,GAAG,OAAIJ,EAASH,EAAO3E,EAAYuE,wBAAyBW,QAGzEF,aAAc,WAAkB,IAAjBrE,EAAiBN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACvB,OAAO,SAAAyE,GAAY,IACTC,EAAmBpE,EAAnBoE,SAAUvB,EAAS7C,EAAT6C,KAIlB,OAFAsB,EAASH,EAAO3E,EAAYwE,sBAAuB7D,IAE5CuC,EACJI,iBAAiByB,EAAUvB,GAC3BZ,KAAK,SAAAuC,GAAO,OAAIL,EAASH,EAAO3E,EAAYyE,sBAAuB,CAAEU,eACrEF,MAAM,SAAAC,GAAG,OAAIJ,EAASH,EAAO3E,EAAY0E,sBAAuBQ,SAK1DN,ICTAQ,EAzBD,WAAkD,IAAjDhF,EAAiDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GARjC,CAC7B0E,SAAU,GACVI,QAAS,GACT3B,KAAM,EACN6B,YAAY,EACZ9C,MAAO,IAGuD9B,EAAAJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAApBG,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,QAChD,OAAQD,GACN,KAAKV,EAAYqE,wBACjB,KAAKrE,EAAYwE,sBACf,OAAO5D,OAAAC,EAAA,EAAAD,CAAA,GACFR,EADL,CAEEiF,YAAY,IAEhB,KAAKrF,EAAYsE,wBACf,OAAO1D,OAAAC,EAAA,EAAAD,CAAA,GACFR,EACAO,GAEP,KAAKX,EAAYyE,sBACf,OAAO7D,OAAAC,EAAA,EAAAD,CAAA,GACFR,EADL,CAEE+E,QAAQvE,OAAA0E,EAAA,EAAA1E,CAAKR,EAAM+E,SAAZjF,OAAAU,OAAA0E,EAAA,EAAA1E,CAAwBD,EAAQwE,UACvC3B,KAAMpD,EAAMoD,KAAO,EACnB6B,YAAY,IAEhB,QACE,OAAOjF,ICrBEmF,EALKC,YAAgB,CAClCrF,MACAiF,kBCFIK,SAAiB,IAEvBA,EAAeC,KAAKC,KAMpB,IAEeC,EAFIC,YAAQC,IAAeC,WAAf,EAAmBN,ICJ/BO,EALQ,SAAAC,GAErB,OADcC,YAAYC,EAASF,EAAcL,YCAtCQ,EAAyBC,YAHb,SAAAjG,GAAK,OAAIA,EAAMgF,MAAML,UACtB,SAAA3E,GAAK,OAAIA,EAAMgF,MAAMD,SAK3C,SAACJ,EAAUI,GAAX,OAAuBJ,EAASzE,OAAS6E,EAAQ7E,2FCYpCgG,EAlBS,SAAAC,GACtB,IAAIC,EAAW,GAcf,OAZID,IACGA,EAAQE,SAAS,QACpBF,EAAO,UAAArG,OAAaqG,IAGtBC,EAAWE,IAAIC,MAAMJ,GAASC,UAG5BA,EAASC,SAAS,UACpBD,EAAWA,EAASI,MAAM,QAAQ,IAG7BJ,GCjBHK,EAAU,+BACHC,EAAO,GAAA5G,OAAM2G,EAAN,aACPE,EAAO,GAAA7G,OAAM2G,EAAN,aASLG,EAPQ,SAAAvG,GAAiB,IAAdiG,EAAcjG,EAAdiG,IAAKrD,EAAS5C,EAAT4C,GACvB4D,EAAU,GAAA/G,OAAM4G,GAAN5G,OAAgBmD,GAGhC,OAFeqD,GAAYO,06BCJtB,IAAMC,GAAOC,IAAOC,GAAVC,KACY,SAAA5G,GAAA,OAAAA,EAAGD,MAAkB8G,SAQrCC,GAAQJ,IAAOK,GAAVC,KACP,SAAAC,GAAA,OAAAA,EAAGlH,MAAkBmH,OAQnBC,GAAOT,IAAOU,KAAVC,KACN,SAAAC,GAAA,OAAAA,EAAGvH,MAAkBwH,gBAInBC,GAAcd,IAAOe,EAAVC,KACb,SAAAC,GAAA,OAAAA,EAAG5H,MAAkBmH,OASnBU,GAAclB,IAAOmB,IAAVC,IAEb,SAAAC,GAAA,OAAAA,EAAGhI,MAAkBwH,gBAGnBS,GAActB,IAAOe,EAAVQ,IACb,SAAAC,GAAA,OAAAA,EAAGnI,MAAkBwH,eAGnB,SAAAY,GAAA,OAAAA,EAAGpI,MAAkBwH,gBCrC5Ba,GAAUC,MACVC,GAAW,+BA4BFC,GA1BE,SAAAvI,GAA0D,IAAvDwI,EAAuDxI,EAAvDwI,GAAuDC,EAAAzI,EAAnD0I,YAAmD,IAAAD,EAA5C,GAA4CA,EAAxCE,EAAwC3I,EAAxC2I,MAAO1C,EAAiCjG,EAAjCiG,IAAK2C,EAA4B5I,EAA5B4I,MAAOhG,EAAqB5C,EAArB4C,GAAUiG,GAAW7I,EAAjBC,KAAiBD,EAAX6I,MACxDC,EAAOjD,EAAgBI,IAAQ,uBAC/B8C,EAAOxC,EAAe,CAAEN,MAAKrD,OAC7B4D,EAAU,GAAA/G,OAAM4G,GAAN5G,OAAgBmD,GAEhC,OACEoG,EAAAvB,EAAAwB,cAACxC,GAAD,KACEuC,EAAAvB,EAAAwB,cAACzB,GAAD,CAAa0B,KAAMH,EAAMI,IAAKb,GAAUc,OAAO,UAC7CJ,EAAAvB,EAAAwB,cAACnC,GAAD,KACG8B,EADH,IACUI,EAAAvB,EAAAwB,cAAC9B,GAAD,SAAQ2B,EAAR,OAGZE,EAAAvB,EAAAwB,cAACrB,GAAD,KACGe,EADH,aACoB,IAClBK,EAAAvB,EAAAwB,cAACjB,GAAD,CAAakB,KAAI,GAAAzJ,OAAK6G,GAAL7G,OAAe+I,GAAMW,IAAKb,GAAUc,OAAO,UACzDZ,GACY,IACdJ,GAAQiB,OAAO,IAAIC,KAAY,IAAPT,GAAaU,eALxC,IAKyD,MACvDP,EAAAvB,EAAAwB,cAACjB,GAAD,CAAakB,KAAM1C,EAAY2C,IAAKb,GAAUc,OAAO,UAClDV,EAAK7I,OADR,4PC1BD,IAAM2J,GAAc9C,IAAO+C,GAAVC,KACF,SAAA1J,GAAA,OAAAA,EAAGD,MAAkB4J,sBCU5BC,GARF,SAAA5J,GAAA,IAAG0E,EAAH1E,EAAG0E,QAAH,OACXsE,EAAAvB,EAAAwB,cAACO,GAAD,KACG9E,EAAQjB,IAAI,SAAAkB,GAAK,OAChBqE,EAAAvB,EAAAwB,cAACY,GAAD1J,OAAA2J,OAAA,CAAUC,IAAKpF,EAAM/B,IAAQ+B,84CCNnC,IAAMqF,GAAQC,YAAHC,MAwBEC,GAAYzD,IAAOmB,IAAVuC,KAIT,SAAApK,GAAA,OAAAA,EAAGD,MAAkBwH,eAUZyC,IC5BPK,GARA,kBACbrB,EAAAvB,EAAAwB,cAACkB,GAAD,KACEnB,EAAAvB,EAAAwB,cAAA,iBACAD,EAAAvB,EAAAwB,cAAA,iBACAD,EAAAvB,EAAAwB,cAAA,mBCRSqB,GAAa,CACxBC,WAAY,UACZZ,oBAAqB,UACrBzC,KAAM,UACNK,cAAe,UACfV,OAAQ,+ZCFH,IAAM2D,GAAU9D,IAAOmB,IAAV4C,KCFE,8CDeT3D,GAAQJ,IAAOgE,GAAVC,KACP,SAAA3K,GAAA,OAAAA,EAAGD,MAAkBwH,gBE+BjBqD,8MAlCbrG,aAAe,WAAM,IAAAsG,EACkCC,EAAKC,MAAlDzG,EADWuG,EACXvG,SAAUvB,EADC8H,EACD9H,KAAMwB,EADLsG,EACKtG,aADLsG,EACmBjG,YAEpCL,EAAa,CAAED,WAAUvB,6FAN3BzB,KAAKyJ,MAAMC,yDAUJ,IAAAC,EAC4B3J,KAAKyJ,MAAhCrG,EADDuG,EACCvG,QAASwG,EADVD,EACUC,cACjB,OACElC,EAAAvB,EAAAwB,cAACkC,EAAA,EAAD,CAAepL,MAAOuK,IACpBtB,EAAAvB,EAAAwB,cAAA,WACED,EAAAvB,EAAAwB,cAACuB,GAAD,KACExB,EAAAvB,EAAAwB,cAACmC,GAAD,8BACApC,EAAAvB,EAAAwB,cAACoC,GAAD,CAAM3G,QAASA,IACfsE,EAAAvB,EAAAwB,cAACqC,EAAA7D,EAAD,CACE8D,WAAY7G,EAAQ7E,OACpB2L,KAAMlK,KAAKiD,aACXkH,QAASP,EACTQ,OAAQ1C,EAAAvB,EAAAwB,cAAC0C,GAAD,MACRC,MAAO,CACLC,OAAQ,OACRC,SAAU,YAGZ9C,EAAAvB,EAAAwB,cAACoC,GAAD,CAAM3G,QAASA,eA9BXqH,aCUHC,eAdS,SAAArM,GAAK,MAAK,CAChCI,MAAOJ,EAAMD,IAAIK,MACjB2E,QAAS/E,EAAMgF,MAAMD,QACrB3B,KAAMpD,EAAMgF,MAAM5B,KAClBuB,SAAU3E,EAAMgF,MAAML,SACtBM,WAAYjF,EAAMgF,MAAMC,WACxBsG,cAAevF,EAAuBhG,KAGb,SAAA0E,GAAQ,MAAK,CACtC2G,sBAAuB,kBAAM3G,EAASF,EAAQC,kBAC9CG,aAAc,SAAAvE,GAAA,IAAGsE,EAAHtE,EAAGsE,SAAUvB,EAAb/C,EAAa+C,KAAb,OAAwBsB,EAASF,EAAQI,aAAa,CAAED,WAAUvB,aAGnEiJ,CAGbpB,ghBCnBF,IA8BeqB,GA9BS,kBACtBC,YADuBC,KAaC7B,GAAWC,aCNjB6B,QACW,cAA7BC,OAAOC,SAASvG,UAEe,UAA7BsG,OAAOC,SAASvG,UAEhBsG,OAAOC,SAASvG,SAASwG,MACvB,2DCRNN,MAEkB,WAChB,IACMO,EAAQjH,EADO,IAErBiH,EAAMnI,SAAS,CAAEpE,KAAM,qBAOvBwM,IAASC,OACP1D,EAAAvB,EAAAwB,cAAC0D,EAAA,EAAD,CAAUH,MAAOA,GACfxD,EAAAvB,EAAAwB,cAAC2D,GAAD,OAEFC,SAASC,eAAe,SAI5BC,GD6FM,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/K,KAAK,SAAAgL,GACjCA,EAAaC","file":"static/js/main.f98b20f4.chunk.js","sourcesContent":["const NS = '@hnReader/app';\n\nexport const actionTypes = {\n  SET_THEME: `${NS}/SET_THEME`,\n};\n\nconst actions = {\n  setTheme: (payload = {}) => ({ type: actionTypes.SET_THEME, payload }),\n};\n\nexport default actions;\n","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n  theme: 'dark',\n});\n\nconst app = (state = getInitialState(), { type, payload }) => {\n  switch (type) {\n    case actionTypes.SET_THEME:\n      return {\n        ...state,\n        ...payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import axios from 'axios';\n\n// Default API will be your root\nconst API_ROOT = process.env.URL || 'http://localhost:3000/';\nconst TIMEOUT = 20000;\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\nclass ApiService {\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\n    const client = axios.create({\n      baseURL,\n      timeout,\n      headers,\n      auth,\n    });\n\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.client = client;\n  }\n\n  handleSuccess(response) {\n    return response;\n  }\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(path) {\n    return this.client.get(path).then(response => response.data);\n  }\n\n  post(path, payload) {\n    return this.client.post(path, payload).then(response => response.data);\n  }\n\n  put(path, payload) {\n    return this.client.put(path, payload).then(response => response.data);\n  }\n\n  patch(path, payload) {\n    return this.client.patch(path, payload).then(response => response.data);\n  }\n\n  delete(path) {\n    return this.client.delete(path).then(response => response.data);\n  }\n}\n\nexport default ApiService;\n","import ApiService from './Api';\n\nconst JSON_QUERY = '.json?print=pretty';\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\nconst client = new ApiService({ baseURL: BASE_URL });\n\nconst hackerNewsApi = {};\n\nconst PAGE_LIMIT = 20;\nconst getPageSlice = (limit, page = 0) => ({ begin: page * limit, end: (page + 1) * limit });\nconst getPageValues = ({ begin, end, items }) => items.slice(begin, end);\n\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\nhackerNewsApi.getStory = id => client.get(`/item/${id}${JSON_QUERY}`);\nhackerNewsApi.getStoriesByPage = (ids, page) => {\n  const { begin, end } = getPageSlice(PAGE_LIMIT, page);\n  const activeIds = getPageValues({ begin, end, items: ids });\n  const storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\n  return Promise.all(storyPromises);\n};\n\nexport default hackerNewsApi;\n","import hackerNewsApi from 'services/hackerNewsApi';\n\nconst NS = '@hnReader/story';\n\nexport const actionTypes = {\n  FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\n  FETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\n  FETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\n  FETCH_STORIES_REQUEST: `${NS}/FETCH_STORIES_REQUEST`,\n  FETCH_STORIES_SUCCESS: `${NS}/FETCH_STORIES_SUCCESS`,\n  FETCH_STORIES_FAILURE: `${NS}/FETCH_STORIES_FAILURE`,\n};\n\nconst action = (type, payload) => ({ type, payload });\n\nconst actions = {\n  fetchStoryIds: (payload = {}) => {\n    return dispatch => {\n      dispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST, payload));\n\n      return hackerNewsApi\n        .getTopStoryIds()\n        .then(storyIds => {\n          dispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS, { storyIds }));\n          dispatch(actions.fetchStories({ storyIds, page: 0 }));\n          return storyIds;\n        })\n        .catch(err => dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err)));\n    };\n  },\n  fetchStories: (payload = {}) => {\n    return dispatch => {\n      const { storyIds, page } = payload;\n\n      dispatch(action(actionTypes.FETCH_STORIES_REQUEST, payload));\n\n      return hackerNewsApi\n        .getStoriesByPage(storyIds, page)\n        .then(stories => dispatch(action(actionTypes.FETCH_STORIES_SUCCESS, { stories })))\n        .catch(err => dispatch(action(actionTypes.FETCH_STORIES_FAILURE, err)));\n    };\n  },\n};\n\nexport default actions;\n","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n  storyIds: [],\n  stories: [],\n  page: 0,\n  isFetching: false,\n  error: '',\n});\n\nconst story = (state = getInitialState(), { type, payload }) => {\n  switch (type) {\n    case actionTypes.FETCH_STORY_IDS_REQUEST:\n    case actionTypes.FETCH_STORIES_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case actionTypes.FETCH_STORY_IDS_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n      };\n    case actionTypes.FETCH_STORIES_SUCCESS:\n      return {\n        ...state,\n        stories: [...state.stories, ...payload.stories],\n        page: state.page + 1,\n        isFetching: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default story;\n","import { combineReducers } from 'redux';\n\nimport app from './app/reducer';\nimport story from './story/reducer';\n\nconst rootReducer = combineReducers({\n  app,\n  story,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst middlewareList = [];\n\nmiddlewareList.push(thunk);\n\nif (!isProd) {\n  middlewareList.push(createLogger());\n}\n\nconst middleware = compose(applyMiddleware(...middlewareList));\n\nexport default middleware;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst configureStore = initialState => {\n  const store = createStore(reducer, initialState, middleware);\n  return store;\n};\n\nexport default configureStore;\n","import { createSelector } from 'reselect';\n\nconst storyIdsSelector = state => state.story.storyIds;\nconst storiesSelector = state => state.story.stories;\n\nexport const hasMoreStoriesSelector = createSelector(\n  storyIdsSelector,\n  storiesSelector,\n  (storyIds, stories) => storyIds.length > stories.length,\n);\n","import url from 'url';\n\nconst getSiteHostname = siteUrl => {\n  let hostname = '';\n\n  if (siteUrl) {\n    if (!siteUrl.includes('//')) {\n      siteUrl = `http://${siteUrl}`;\n    }\n\n    hostname = url.parse(siteUrl).hostname;\n  }\n\n  if (hostname.includes('www.')) {\n    hostname = hostname.split('www.')[1];\n  }\n\n  return hostname;\n};\n\nexport default getSiteHostname;\n","const HN_ROOT = 'https://news.ycombinator.com';\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\nexport const HN_USER = `${HN_ROOT}/user?id=`;\n\nconst getArticleLink = ({ url, id }) => {\n  const commentUrl = `${HN_ITEM}${id}`;\n  const link = !!url ? url : commentUrl;\n\n  return link;\n};\n\nexport default getArticleLink;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  padding: 14px 24px;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${({ theme }) => theme.text};\n  margin-top: 0;\n  margin-bottom: 6px;\n  font-weight: 400;\n  font-size: 16px;\n  letter-spacing: 0.4px;\n`;\n\nexport const Host = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 12px;\n`;\n\nexport const ExernalLink = styled.a`\n  color: ${({ theme }) => theme.text};\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n`;\n\nexport const Description = styled.div`\n  font-size: 14px;\n  color: ${({ theme }) => theme.textSecondary};\n`;\n\nexport const CommentLink = styled.a`\n  color: ${({ theme }) => theme.textSecondary};\n\n  &:visited {\n    color: ${({ theme }) => theme.textSecondary};\n  }\n`;\n","import React from 'react';\nimport Timeago from 'timeago.js';\nimport getSiteHostname from 'utils/getSiteHostname';\nimport getArticleLink, { HN_USER, HN_ITEM } from 'utils/getArticleLink';\n\nimport { Item, Title, Host, ExernalLink, Description, CommentLink } from './styles';\n\nconst timeago = Timeago();\nconst LINK_REL = 'nofollow noreferrer noopener';\n\nconst ListItem = ({ by, kids = [], score, url, title, id, type, time }) => {\n  const site = getSiteHostname(url) || 'news.ycombinator.com';\n  const link = getArticleLink({ url, id });\n  const commentUrl = `${HN_ITEM}${id}`;\n\n  return (\n    <Item>\n      <ExernalLink href={link} rel={LINK_REL} target=\"_blank\">\n        <Title>\n          {title} <Host>({site})</Host>\n        </Title>\n      </ExernalLink>\n      <Description>\n        {score} points by{' '}\n        <CommentLink href={`${HN_USER}${by}`} rel={LINK_REL} target=\"_blank\">\n          {by}\n        </CommentLink>{' '}\n        {timeago.format(new Date(time * 1000).toISOString())} {' | '}\n        <CommentLink href={commentUrl} rel={LINK_REL} target=\"_blank\">\n          {kids.length} Comments\n        </CommentLink>\n      </Description>\n    </Item>\n  );\n};\n\nexport default ListItem;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.ul`\n  background-color: ${({ theme }) => theme.backgroundSecondary};\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport ListItem from 'components/ListItem';\n\nimport { ListWrapper } from './styles';\n\nconst List = ({ stories }) => (\n  <ListWrapper>\n    {stories.map(story => (\n      <ListItem key={story.id} {...story} />\n    ))}\n  </ListWrapper>\n);\n\nexport default List;\n","import styled, { keyframes } from 'styled-components';\n\nconst blink = keyframes`\n  /**\n  * At the start of the animation the dot\n  * has an opacity of .2\n  */\n  0% {\n    opacity: .2;\n  }\n  /**\n  * At 20% the dot is fully visible and\n  * then fades out slowly\n  */\n  20% {\n    opacity: 1;\n  }\n  /**\n  * Until it reaches an opacity of .2 and\n  * the animation can start again\n  */\n  100% {\n    opacity: .2;\n  }\n`;\n\nexport const Animation = styled.div`\n  text-align: center;\n\n  span {\n    color: ${({ theme }) => theme.textSecondary};\n    display: inline-block;\n    margin-left: 4px;\n    margin-right: 4px;\n    font-size: 80px;\n    line-height: 0.1;\n\n    /**\n    * Use the blink animation, which is defined above\n    */\n    animation-name: ${blink};\n    /**\n    * The total time of animation\n    */\n    animation-duration: 1s;\n    /**\n    * It will repeat itself forever\n    */\n    animation-iteration-count: infinite;\n    /**\n    * This makes sure that the starting style (opacity: .2)\n    * of the animation is applied before the animation starts.\n    * Otherwise we would see a short flash or would have\n    * to set the default styling of the dots to the same\n    * as the animation. Same applies for the ending styles.\n    */\n    animation-fill-mode: both;\n  }\n\n  span:nth-child(2) {\n    animation-delay: 0.2s;\n  }\n  span:nth-child(3) {\n    animation-delay: 0.4s;\n  }\n`;\n","import React from 'react';\n\nimport { Animation } from './styles';\n\nconst Loader = () => (\n  <Animation>\n    <span>.</span>\n    <span>.</span>\n    <span>.</span>\n  </Animation>\n);\n\nexport default Loader;\n","export const colorsDark = {\n  background: '#272727',\n  backgroundSecondary: '#393C3E',\n  text: '#bfbebe',\n  textSecondary: '#848886',\n  border: '#272727',\n};\n\nexport const colorsLight = {\n  background: '#EAEAEA',\n  backgroundSecondary: '#F8F8F8',\n  text: '#848886',\n  textSecondary: '#aaaaaa',\n  border: '#EAEAEA',\n};\n","import styled from 'styled-components';\nimport { tablet } from 'styles/mediaQueries';\n\nexport const Wrapper = styled.div`\n  width: 85%;\n  margin-left: auto;\n  margin-right: auto;\n  height: 100%;\n  overflow: hidden;\n  padding-bottom: 200px;\n\n  ${tablet} {\n    width: 96%;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 20px;\n  font-weight: 300;\n  margin-top: 24px;\n  margin-bottom: 26px;\n`;\n","export const mobile = '@media only screen and  (max-width: 480px)';\nexport const tablet = '@media only screen and  (max-width: 768px)';\nexport const monitor = '@media only screen and  (min-width: 1400px)';\n","import React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport List from 'components/List';\nimport Loader from 'components/Loader';\nimport { colorsDark } from 'styles/palette';\n\nimport { Wrapper, Title } from './styles';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchStoriesFirstPage();\n  }\n\n  fetchStories = () => {\n    const { storyIds, page, fetchStories, isFetching } = this.props;\n    if (!isFetching) {\n      fetchStories({ storyIds, page });\n    }\n  };\n\n  render() {\n    const { stories, hasMoreStores } = this.props;\n    return (\n      <ThemeProvider theme={colorsDark}>\n        <div>\n          <Wrapper>\n            <Title>// Hacker News Reader</Title>\n            <List stories={stories} />\n            <InfiniteScroll\n              dataLength={stories.length}\n              next={this.fetchStories}\n              hasMore={hasMoreStores}\n              loader={<Loader />}\n              style={{\n                height: '100%',\n                overflow: 'visible',\n              }}\n            >\n              <List stories={stories} />\n            </InfiniteScroll>\n          </Wrapper>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport actions from 'store/story/actions';\nimport { hasMoreStoriesSelector } from 'store/story/selectors';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n  theme: state.app.theme,\n  stories: state.story.stories,\n  page: state.story.page,\n  storyIds: state.story.storyIds,\n  isFetching: state.story.isFetching,\n  hasMoreStores: hasMoreStoriesSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n  fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page })),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","import { injectGlobal } from 'styled-components';\nimport { colorsDark } from './palette';\n\nconst setGlobalStyles = () =>\n  injectGlobal`\n    * {\n      box-sizing: border-box;\n    }\n\n    html, body {\n      font-family: Lato,Helvetica-Neue,Helvetica,Arial,sans-serif;\n      width: 100vw;\n      overflow-x: hidden;\n      margin: 0;\n      padding: 0;\n      min-height: 100vh;\n      background-color: ${colorsDark.background};\n    }\n\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n\n    a {\n      text-decoration: none;\n\n      &:visited {\n        color: inherit;\n      }\n    }\n  `;\n\nexport default setGlobalStyles;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from 'store';\nimport App from 'components/App';\nimport setGlobalStyles from 'styles/globals';\nimport * as serviceWorker from './serviceWorker';\n\nsetGlobalStyles();\n\nconst renderApp = () => {\n  const initialState = {};\n  const store = configureStore(initialState);\n  store.dispatch({ type: '@hnReader/@@INIT' });\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.log('Initial state ->');\n    console.log(store.getState());\n  }\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nrenderApp();\n\nserviceWorker.unregister();\n"],"sourceRoot":""}